stages:
  - build
  - docker
  - release


build:
  stage: build
  image: node:alpine
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn/
      - yarn.lock
  script:
    - yarn install --immutable
    - yarn run build
  artifacts:
    paths:
      - build/
  only:
    - prod

docker:
  stage: docker
  image: docker:latest
  before_script:
    - docker login -u $DOCKERLOGIN -p $DOCKERTOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE_FRONT:prod .
    - docker push $CI_REGISTRY_IMAGE_FRONT:prod
  dependencies:
    - build
  only:
    - prod

release:
  stage: release
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - bash -c "ssh-add <(echo \"$PRIVATE_KEY\")"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST "docker system prune -f"
    - ssh root@$HOST "docker compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST "docker compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST "docker compose -f ~/docker-compose.yml up -d"
  dependencies:
    - build
  only:
    - prod